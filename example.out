; ModuleID = 'dinosaur'
source_filename = "dinosaur"

@a = global i32 0
@b = global i32 0
@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  store i32 10, i32* %x, align 4
  store i32 5, i32* %y, align 4
  %x1 = load i32, i32* %x, align 4
  %y2 = load i32, i32* %y, align 4
  %tmp = icmp sgt i32 %x1, %y2
  %x7 = load i32, i32* %x, align 4
  %y8 = load i32, i32* %y, align 4
  %tmp9 = icmp slt i32 %x7, %y8
  br i1 %tmp, label %L1_body, label %L2

L1_body:                                          ; preds = %entry
  %y3 = load i32, i32* %y, align 4
  %x4 = load i32, i32* %x, align 4
  %tmp5 = sub i32 %y3, %x4
  store i32 %tmp5, i32* %z, align 4
  %z6 = load i32, i32* %z, align 4
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %z6)
  br label %L_end

L2:                                               ; preds = %entry
  br i1 %tmp9, label %L2_body, label %L3

L2_body:                                          ; preds = %L2
  %x10 = load i32, i32* %x, align 4
  %y11 = load i32, i32* %y, align 4
  %tmp12 = sub i32 %x10, %y11
  store i32 %tmp12, i32* %z, align 4
  %z13 = load i32, i32* %z, align 4
  %printf14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %z13)
  br label %L_end

L3:                                               ; preds = %L2
  store i32 0, i32* %z, align 4
  %z15 = load i32, i32* %z, align 4
  %printf16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %z15)
  br label %L_end

L_end:                                            ; preds = %L3, %L2_body, %L1_body
  ret i32 0
}
