; ModuleID = 'dinosaur'
source_filename = "dinosaur"

@a = global i32 0
@b = global i32 0
@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@STRINGLITERAL = private unnamed_addr constant [4 x i8] c"abc\00", align 1

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i1, align 1
  %str = alloca i8*, align 8
  %sum = alloca i32, align 4
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @STRINGLITERAL, i32 0, i32 0), i8** %str, align 8
  store i32 10, i32* %x, align 4
  store i32 5, i32* %y, align 4
  %x1 = load i32, i32* %x, align 4
  %y2 = load i32, i32* %y, align 4
  %tmp = icmp sgt i32 %x1, %y2
  store i1 %tmp, i1* %z, align 1
  %x3 = load i32, i32* %x, align 4
  %y4 = load i32, i32* %y, align 4
  %tmp5 = add i32 %x3, %y4
  store i32 %tmp5, i32* %sum, align 4
  %sum6 = load i32, i32* %sum, align 4
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %sum6)
  ret i32 0
}
