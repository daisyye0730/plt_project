; ModuleID = 'dinosaur'
source_filename = "dinosaur"

@a = global i32 0
@b = global i32 0
@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  store i32 2, i32* %x, align 4
  store i32 5, i32* %y, align 4
  %x1 = load i32, i32* %x, align 4
  %y2 = load i32, i32* %y, align 4
  %tmp = icmp sgt i32 %x1, %y2
  %x7 = load i32, i32* %x, align 4
  %tmp8 = add i32 %x7, 1
  %y9 = load i32, i32* %y, align 4
  %tmp10 = icmp slt i32 %tmp8, %y9
  %x13 = load i32, i32* %x, align 4
  %tmp14 = sub i32 %x13, 1
  %y15 = load i32, i32* %y, align 4
  %tmp16 = icmp sgt i32 %tmp14, %y15
  %x22 = load i32, i32* %x, align 4
  %y23 = load i32, i32* %y, align 4
  %tmp24 = icmp slt i32 %x22, %y23
  br i1 %tmp, label %L1_body, label %L2

L1_body:                                          ; preds = %entry
  %x3 = load i32, i32* %x, align 4
  %y4 = load i32, i32* %y, align 4
  %tmp5 = sub i32 %x3, %y4
  store i32 %tmp5, i32* %z, align 4
  %z6 = load i32, i32* %z, align 4
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %z6)
  br label %L_end

L2:                                               ; preds = %entry
  br i1 %tmp10, label %L2_body, label %L3

L2_body:                                          ; preds = %L2
  store i32 22, i32* %z, align 4
  %z11 = load i32, i32* %z, align 4
  %printf12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %z11)
  br label %L_end

L3:                                               ; preds = %L2
  br i1 %tmp16, label %L3_body, label %L4

L3_body:                                          ; preds = %L3
  %y17 = load i32, i32* %y, align 4
  %x18 = load i32, i32* %x, align 4
  %tmp19 = sub i32 %y17, %x18
  store i32 %tmp19, i32* %z, align 4
  %z20 = load i32, i32* %z, align 4
  %printf21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %z20)
  br label %L_end

L4:                                               ; preds = %L3
  br i1 %tmp24, label %L4_body, label %L3_body30

L4_body:                                          ; preds = %L4
  %y25 = load i32, i32* %y, align 4
  %x26 = load i32, i32* %x, align 4
  %tmp27 = sub i32 %y25, %x26
  store i32 %tmp27, i32* %z, align 4
  %z28 = load i32, i32* %z, align 4
  %printf29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %z28)
  br label %L_end

L3_body30:                                        ; preds = %L3_body30, %L4
  store i32 1, i32* %z, align 4
  %z31 = load i32, i32* %z, align 4
  %printf32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %z31)
  br i1 %tmp, label %L3_body30, label %L_end

L_end:                                            ; preds = %L4_body, %L3_body, %L2_body, %L1_body, %L3_body30
  br label %while_predicate_block

while_predicate_block:                            ; preds = %L_end43, %L_end
  %x46 = load i32, i32* %x, align 4
  %y47 = load i32, i32* %y, align 4
  %tmp48 = icmp slt i32 %x46, %y47
  br i1 %tmp48, label %while_body_block, label %while_merge_block

while_body_block:                                 ; preds = %while_predicate_block
  %x33 = load i32, i32* %x, align 4
  %tmp34 = add i32 %x33, 1
  store i32 %tmp34, i32* %x, align 4
  %x35 = load i32, i32* %x, align 4
  %y36 = load i32, i32* %y, align 4
  %tmp37 = sub i32 %y36, 1
  %tmp38 = icmp eq i32 %x35, %tmp37
  br i1 %tmp38, label %L1_body39, label %L3_body42

while_merge_block:                                ; preds = %while_predicate_block, %L1_body39
  store i32 1, i32* %x, align 4
  br label %while_predicate_block49

L1_body39:                                        ; preds = %while_body_block
  %z40 = load i32, i32* %z, align 4
  %printf41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %z40)
  br label %while_merge_block

L3_body42:                                        ; preds = %L3_body42, %while_body_block
  br i1 %tmp38, label %L3_body42, label %L_end43

L_end43:                                          ; preds = %L3_body42
  %x44 = load i32, i32* %x, align 4
  %printf45 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %x44)
  br label %while_predicate_block

while_predicate_block49:                          ; preds = %L_end58, %while_merge_block
  %x61 = load i32, i32* %x, align 4
  %tmp62 = icmp slt i32 %x61, 5
  br i1 %tmp62, label %while_body_block50, label %while_merge_block51

while_body_block50:                               ; preds = %while_predicate_block49
  %x52 = load i32, i32* %x, align 4
  %printf53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %x52)
  %x54 = load i32, i32* %x, align 4
  %tmp55 = icmp eq i32 %x54, 2
  br i1 %tmp55, label %L1_body56, label %L3_body57

while_merge_block51:                              ; preds = %while_predicate_block49, %L1_body56
  ret i32 0

L1_body56:                                        ; preds = %while_body_block50
  br label %while_merge_block51

L3_body57:                                        ; preds = %L3_body57, %while_body_block50
  br i1 %tmp55, label %L3_body57, label %L_end58

L_end58:                                          ; preds = %L3_body57
  %x59 = load i32, i32* %x, align 4
  %tmp60 = add i32 %x59, 1
  store i32 %tmp60, i32* %x, align 4
  br label %while_predicate_block49
}
