; ModuleID = 'dinosaur'
source_filename = "dinosaur"

@a = global i32 0
@b = global i32 0
@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1
@fmt.2 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@fmt.3 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@fmt.4 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.5 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.6 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1
@fmt.7 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@fmt.8 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@fmt.9 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@STRINGLITERAL = private unnamed_addr constant [4 x i8] c"abc\00", align 1
@STRINGLITERAL.10 = private unnamed_addr constant [4 x i8] c"bcd\00", align 1
@STRINGLITERAL.11 = private unnamed_addr constant [3 x i8] c"hi\00", align 1
@STRINGLITERAL.12 = private unnamed_addr constant [10 x i8] c"not happy\00", align 1

declare i32 @printf(i8*, ...)

declare i32 @strcmp(i8*, i8*)

define i32 @gcd(i32 %a, i32 %b) {
entry:
  %a1 = alloca i32, align 4
  store i32 %a, i32* %a1, align 4
  %b2 = alloca i32, align 4
  store i32 %b, i32* %b2, align 4
  br label %while_predicate_block

while_predicate_block:                            ; preds = %L_end, %entry
  %a24 = load i32, i32* %a1, align 4
  %b25 = load i32, i32* %b2, align 4
  %tmp26 = icmp ne i32 %a24, %b25
  br i1 %tmp26, label %while_body_block, label %while_merge_block

while_body_block:                                 ; preds = %while_predicate_block
  %b3 = load i32, i32* %b2, align 4
  %a4 = load i32, i32* %a1, align 4
  %tmp = icmp slt i32 %b3, %a4
  %b8 = load i32, i32* %b2, align 4
  %a9 = load i32, i32* %a1, align 4
  %tmp10 = icmp eq i32 %b8, %a9
  %b14 = load i32, i32* %b2, align 4
  %a15 = load i32, i32* %a1, align 4
  %tmp16 = icmp slt i32 %b14, %a15
  br i1 %tmp, label %L1_body, label %L2

while_merge_block:                                ; preds = %while_predicate_block
  %a27 = load i32, i32* %a1, align 4
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %a27)
  %a28 = load i32, i32* %a1, align 4
  ret i32 %a28

L1_body:                                          ; preds = %while_body_block
  %a5 = load i32, i32* %a1, align 4
  %b6 = load i32, i32* %b2, align 4
  %tmp7 = sub i32 %a5, %b6
  store i32 %tmp7, i32* %a1, align 4
  br label %L_end

L2:                                               ; preds = %while_body_block
  br i1 %tmp10, label %L2_body, label %L3

L2_body:                                          ; preds = %L2
  %a11 = load i32, i32* %a1, align 4
  %b12 = load i32, i32* %b2, align 4
  %tmp13 = add i32 %a11, %b12
  store i32 %tmp13, i32* %a1, align 4
  br label %L_end

L3:                                               ; preds = %L2
  br i1 %tmp16, label %L3_body, label %L3_body20

L3_body:                                          ; preds = %L3
  %a17 = load i32, i32* %a1, align 4
  %b18 = load i32, i32* %b2, align 4
  %tmp19 = mul i32 %a17, %b18
  store i32 %tmp19, i32* %a1, align 4
  br label %L_end

L3_body20:                                        ; preds = %L3_body20, %L3
  %b21 = load i32, i32* %b2, align 4
  %a22 = load i32, i32* %a1, align 4
  %tmp23 = sub i32 %b21, %a22
  store i32 %tmp23, i32* %b2, align 4
  br i1 %tmp, label %L3_body20, label %L_end

L_end:                                            ; preds = %L3_body, %L2_body, %L1_body, %L3_body20
  br label %while_predicate_block
}

define i32 @main() {
entry:
  %x = alloca i32, align 4
  %str1 = alloca i8*, align 8
  %str2 = alloca i8*, align 8
  %val = alloca i32, align 4
  %new_li = alloca i8*, i32 2, align 8
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @STRINGLITERAL, i32 0, i32 0), i8** %str1, align 8
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @STRINGLITERAL.10, i32 0, i32 0), i8** %str2, align 8
  %str11 = load i8*, i8** %str1, align 8
  %prints = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.7, i32 0, i32 0), i8* %str11)
  store i32 5, i32* %x, align 4
  %storeLiIndex = getelementptr inbounds i8*, i8** %new_li, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @STRINGLITERAL.12, i32 0, i32 0), i8** %storeLiIndex, align 8
  %storeLiIndex2 = getelementptr inbounds i8*, i8** %new_li, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @STRINGLITERAL.11, i32 0, i32 0), i8** %storeLiIndex2, align 8
  %x3 = load i32, i32* %x, align 4
  %x4 = load i32, i32* %x, align 4
  %gcd_result = call i32 @gcd(i32 %x4, i32 %x3)
  ret i32 0
}
