###
The GCD algorithm in MicroC
hi 
###
int a;
int b;

int gcd(int a, int b) {
  while (a != b) {
    if (b < a) {
      a = a - b; }
    elif (b == a) {
      a = a + b;
    }
    (elif (b < a) {
      a = a * b;
    })
    else {b = b - a;}
  }
  return a;
}

int main() {
  int x;
  int y;
  int num;
  float z;
  string op;

  List(float, 4) new_list;
  List(float, 1) sublist;
  
  List(bool, 3) l1;
  List(bool, 3) l2;

  List(int, 3) t1;
  List(int, 3) t2;
  List(int, 3) sum;
  
  List(bool, 3) boolLi;

  t1 = [2, 3, 4];
  op = "abc";
  boolLi = [x > y, x > y, x == y];
  new_list = [3.5, 2.0, 4.7, 2.2]; 
  z = new_list[2];
  x++;
  new_list[1] = 3.5; 
  sublist = new_list[2:3];
  a = 18;
  b = -9;
  x = a + b;
  y = 14;

  print(gcd(x,y));
  print(gcd(3,15));
  print(gcd(99,121));
  print(gcd(a,b));
  return 0;
}
